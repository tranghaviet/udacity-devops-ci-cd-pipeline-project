name: Frontend CI

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

# Jobs defined in the workflow
jobs:
  linting-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-npm # use later to check if cache hit
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        working-directory: ./frontend
        run: npm list

      - name: Install the dependencies.
        working-directory: ./frontend
        run: npm i

      - name: Run the linter.
        working-directory: ./frontend
        run: npm run lint

  testing-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-npm # use later to check if cache hit
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        working-directory: ./frontend
        run: npm list

      - name: Install the dependencies.
        working-directory: ./frontend
        run: npm i

      - name: Run the tests.
        working-directory: ./frontend
        run: npm run test

  build-job:
    needs: [linting-job, testing-job]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-npm # use later to check if cache hit
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        working-directory: ./frontend
        run: npm list

      - name: Install the dependencies.
        working-directory: ./frontend
        run: npm i

      - name: Run build
        working-directory: ./frontend
        run: npm run build
