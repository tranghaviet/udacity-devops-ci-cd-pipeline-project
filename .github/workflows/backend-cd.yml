name: Backend CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/actions/backend/**'
      - '.github/workflows/backend*'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: backend
  K8S_CLUSTER: cluster

defaults:
  run:
    working-directory: ./backend

jobs:
  ci-workflow:
    uses: ./.github/workflows/backend-ci.yml

  deploy:
    needs: [ci-workflow]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github
          backend

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: docker push ${{ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.29.0'

    - name: Connect to EKS Cluster
      run: aws eks update-kubeconfig --name ${{ env.K8S_CLUSTER }} --region ${{ env.AWS_REGION }}

    - name: Set the image tag to the newer version
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: kubectl kustomize edit set image backend=${{ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

    - name: Apply the manifests to the cluster
      run: |
        cd k8s
        kubectl kustomize build | kubectl apply -f -

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: Deploy backend successfully
